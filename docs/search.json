[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Weixiang Fang. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fang W (2022). qfm: Quantitative Fate Mapping ICE-FASE Phylotime. R package version 1.0.0.","code":"@Manual{,   title = {qfm: Quantitative Fate Mapping with ICE-FASE and Phylotime},   author = {Weixiang Fang},   year = {2022},   note = {R package version 1.0.0}, }"},{"path":"/reference/add_edge_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Add edge length to edge df — add_edge_length","title":"Add edge length to edge df — add_edge_length","text":"Add edge length edge df","code":""},{"path":"/reference/add_edge_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add edge length to edge df — add_edge_length","text":"","code":"add_edge_length(edges_df, nodes_df)"},{"path":"/reference/as.phylo.type_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert type graph to phylo object — as.phylo.type_graph","title":"Convert type graph to phylo object — as.phylo.type_graph","text":"Convert type graph phylo object","code":""},{"path":"/reference/as.phylo.type_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert type graph to phylo object — as.phylo.type_graph","text":"","code":"# S3 method for type_graph as.phylo(type_graph)"},{"path":"/reference/calc_bsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute BSUM or Colless index value — calc_bsum","title":"Compute BSUM or Colless index value — calc_bsum","text":"Compute BSUM Colless index value","code":""},{"path":"/reference/calc_bsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute BSUM or Colless index value — calc_bsum","text":"","code":"calc_bsum(phy)"},{"path":"/reference/calc_bsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute BSUM or Colless index value — calc_bsum","text":"phy `phylo` object.","code":""},{"path":"/reference/calculate_type_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the counts before next division — calculate_type_counts","title":"Calculate the counts before next division — calculate_type_counts","text":"Calculate counts next division","code":""},{"path":"/reference/calculate_type_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the counts before next division — calculate_type_counts","text":"","code":"calculate_type_counts(type_graph, init_count = type_graph$founder_size)"},{"path":"/reference/cells_to_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cells to edge data.frame — cells_to_edges","title":"Convert cells to edge data.frame — cells_to_edges","text":"Convert cells edge data.frame","code":""},{"path":"/reference/cells_to_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cells to edge data.frame — cells_to_edges","text":"","code":"cells_to_edges(cells)"},{"path":"/reference/cells_to_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cells to node data.frame — cells_to_nodes","title":"Convert cells to node data.frame — cells_to_nodes","text":"Convert cells node data.frame","code":""},{"path":"/reference/cells_to_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cells to node data.frame — cells_to_nodes","text":"","code":"cells_to_nodes(cells)"},{"path":"/reference/change_target_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Change target time — change_target_time","title":"Change target time — change_target_time","text":"Change target time","code":""},{"path":"/reference/change_target_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change target time — change_target_time","text":"","code":"change_target_time(type_graph, target_time)"},{"path":"/reference/check_n_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Compre if two strings are identical other than 'N' characters — check_n_identity","title":"Compre if two strings are identical other than 'N' characters — check_n_identity","text":"Compre two strings identical 'N' characters","code":""},{"path":"/reference/check_n_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compre if two strings are identical other than 'N' characters — check_n_identity","text":"","code":"check_n_identity(str_n, str_ref)"},{"path":"/reference/collaspe_di.html","id":null,"dir":"Reference","previous_headings":"","what":"collaspe nodes below certain threshold — collaspe_di","title":"collaspe nodes below certain threshold — collaspe_di","text":"collaspe nodes certain threshold","code":""},{"path":"/reference/collaspe_di.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"collaspe nodes below certain threshold — collaspe_di","text":"","code":"collaspe_di(res, tol)"},{"path":"/reference/concat_mut_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate two `mut_p` (mutagenesis parameters) objects. — concat_mut_p","title":"Concatenate two `mut_p` (mutagenesis parameters) objects. — concat_mut_p","text":"Concatenate two `mut_p` (mutagenesis parameters) objects.","code":""},{"path":"/reference/concat_mut_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate two `mut_p` (mutagenesis parameters) objects. — concat_mut_p","text":"","code":"concat_mut_p(mut_p1, mut_p2)"},{"path":"/reference/concat_mut_p_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate a list of `mut_p` (mutagenesis parameters) objects. — concat_mut_p_list","title":"Concatenate a list of `mut_p` (mutagenesis parameters) objects. — concat_mut_p_list","text":"Concatenate list `mut_p` (mutagenesis parameters) objects.","code":""},{"path":"/reference/concat_mut_p_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate a list of `mut_p` (mutagenesis parameters) objects. — concat_mut_p_list","text":"","code":"concat_mut_p_list(mut_p_list)"},{"path":"/reference/construct_true_lineage_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"deprecated now (repplaced by mod2)\r\ndeprecated but no mod2 available now — construct_true_lineage_multi","title":"deprecated now (repplaced by mod2)\r\ndeprecated but no mod2 available now — construct_true_lineage_multi","text":"deprecated now (repplaced mod2) deprecated mod2 available now","code":""},{"path":"/reference/construct_true_lineage_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deprecated now (repplaced by mod2)\r\ndeprecated but no mod2 available now — construct_true_lineage_multi","text":"","code":"construct_true_lineage_multi(gens1, tip_id)"},{"path":"/reference/distribute_all_mut_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute allele counts for all elements — distribute_all_mut_counts","title":"Distribute allele counts for all elements — distribute_all_mut_counts","text":"Distribute allele counts elements","code":""},{"path":"/reference/distribute_all_mut_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute allele counts for all elements — distribute_all_mut_counts","text":"","code":"distribute_all_mut_counts(mut_counts_list, n1, n2)"},{"path":"/reference/distribute_mut_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute mutant allele counts between two groups — distribute_mut_counts","title":"Distribute mutant allele counts between two groups — distribute_mut_counts","text":"Distribute mutant allele counts two groups","code":""},{"path":"/reference/distribute_mut_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute mutant allele counts between two groups — distribute_mut_counts","text":"","code":"distribute_mut_counts(mut_counts, n1, n2)"},{"path":"/reference/edges_df_to_newick.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert simplified edges df to phylo — edges_df_to_newick","title":"Convert simplified edges df to phylo — edges_df_to_newick","text":"Convert simplified edges df phylo","code":""},{"path":"/reference/edges_df_to_newick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert simplified edges df to phylo — edges_df_to_newick","text":"","code":"edges_df_to_newick(edges_df_simple, nodes_df)"},{"path":"/reference/generate_diff_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate differentiation outcome matrix for type graph — generate_diff_outcome","title":"Generate differentiation outcome matrix for type graph — generate_diff_outcome","text":"Generate differentiation outcome matrix type graph","code":""},{"path":"/reference/generate_diff_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate differentiation outcome matrix for type graph — generate_diff_outcome","text":"","code":"generate_diff_outcome(type_graph)"},{"path":"/reference/generate_edge_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate edge data.frame for type graph, getting edge lengths from laid out graph — generate_edge_df","title":"Generate edge data.frame for type graph, getting edge lengths from laid out graph — generate_edge_df","text":"Generate edge data.frame type graph, getting edge lengths laid graph","code":""},{"path":"/reference/generate_edge_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate edge data.frame for type graph, getting edge lengths from laid out graph — generate_edge_df","text":"","code":"generate_edge_df(type_graph)"},{"path":"/reference/generate_mut_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a batch of depth-1 mutante allele — generate_mut_ids","title":"Generate a batch of depth-1 mutante allele — generate_mut_ids","text":"Generate batch depth-1 mutante allele","code":""},{"path":"/reference/generate_mut_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a batch of depth-1 mutante allele — generate_mut_ids","text":"","code":"generate_mut_ids(n, mut_element, recur_ver = TRUE)"},{"path":"/reference/generate_nonrecur_mut_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a batch of non recurring depth-1 mutante allele — generate_nonrecur_mut_ids","title":"Generate a batch of non recurring depth-1 mutante allele — generate_nonrecur_mut_ids","text":"Generate batch non recurring depth-1 mutante allele","code":""},{"path":"/reference/generate_nonrecur_mut_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a batch of non recurring depth-1 mutante allele — generate_nonrecur_mut_ids","text":"","code":"generate_nonrecur_mut_ids(n, mut_element)"},{"path":"/reference/generate_recur_mut_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a batch of recurring depth-1 mutant allele — generate_recur_mut_ids","title":"Generate a batch of recurring depth-1 mutant allele — generate_recur_mut_ids","text":"Generate batch recurring depth-1 mutant allele","code":""},{"path":"/reference/generate_recur_mut_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a batch of recurring depth-1 mutant allele — generate_recur_mut_ids","text":"","code":"generate_recur_mut_ids(n, mut_element, version = TRUE)"},{"path":"/reference/get_cell_type_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"current version of cell phylogeny model — get_cell_type_counts","title":"current version of cell phylogeny model — get_cell_type_counts","text":"current version cell phylogeny model","code":""},{"path":"/reference/get_cell_type_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"current version of cell phylogeny model — get_cell_type_counts","text":"","code":"get_cell_type_counts(type_graph, tp)"},{"path":"/reference/get_edge_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"ICE-FASE inference when topology has multifurcations — get_edge_diff","title":"ICE-FASE inference when topology has multifurcations — get_edge_diff","text":"ICE-FASE inference topology multifurcations","code":""},{"path":"/reference/get_edge_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ICE-FASE inference when topology has multifurcations — get_edge_diff","text":"","code":"get_edge_diff(x, data_obj, trans_time)"},{"path":"/reference/get_edge_len.html","id":null,"dir":"Reference","previous_headings":"","what":"get edge length statistics to distinguish between g0 and g1 — get_edge_len","title":"get edge length statistics to distinguish between g0 and g1 — get_edge_len","text":"get edge length statistics distinguish g0 g1","code":""},{"path":"/reference/get_edge_len.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get edge length statistics to distinguish between g0 and g1 — get_edge_len","text":"","code":"get_edge_len(phy_list)"},{"path":"/reference/get_mut_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"get overlaps of intervals using trick on IRanges\r\nTODO: dependes on IRanges — get_mut_duration","title":"get overlaps of intervals using trick on IRanges\r\nTODO: dependes on IRanges — get_mut_duration","text":"get overlaps intervals using trick IRanges TODO: dependes IRanges","code":""},{"path":"/reference/get_mut_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get overlaps of intervals using trick on IRanges\r\nTODO: dependes on IRanges — get_mut_duration","text":"","code":"get_mut_duration(active_time, start_time, end_time)"},{"path":"/reference/get_next.html","id":null,"dir":"Reference","previous_headings":"","what":"extend out node to the next bifurcation in the lineage tree — get_next","title":"extend out node to the next bifurcation in the lineage tree — get_next","text":"extend node next bifurcation lineage tree","code":""},{"path":"/reference/get_next.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extend out node to the next bifurcation in the lineage tree — get_next","text":"","code":"get_next(y, edges_list)"},{"path":"/reference/get_node_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"get mapping of inferred progenitor states to true progenitor states — get_node_mapping","title":"get mapping of inferred progenitor states to true progenitor states — get_node_mapping","text":"get mapping inferred progenitor states true progenitor states","code":""},{"path":"/reference/get_node_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get mapping of inferred progenitor states to true progenitor states — get_node_mapping","text":"","code":"get_node_mapping(data_obj, type_graph)"},{"path":"/reference/get_sample_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sample size of sim_history — get_sample_size","title":"Get sample size of sim_history — get_sample_size","text":"Get sample size sim_history","code":""},{"path":"/reference/get_sample_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sample size of sim_history — get_sample_size","text":"","code":"get_sample_size(sim_history)"},{"path":"/reference/get_sampled_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sampled cells of at target time — get_sampled_cells","title":"Get sampled cells of at target time — get_sampled_cells","text":"Get sampled cells target time","code":""},{"path":"/reference/get_sampled_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sampled cells of at target time — get_sampled_cells","text":"","code":"get_sampled_cells(sim_history)"},{"path":"/reference/get_t_total.html","id":null,"dir":"Reference","previous_headings":"","what":"deprecated function, used for somatic mutation\r\nget the total amount of time passed that the site could have mutated — get_t_total","title":"deprecated function, used for somatic mutation\r\nget the total amount of time passed that the site could have mutated — get_t_total","text":"deprecated function, used somatic mutation get total amount time passed site mutated","code":""},{"path":"/reference/get_t_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deprecated function, used for somatic mutation\r\nget the total amount of time passed that the site could have mutated — get_t_total","text":"","code":"get_t_total(active_time)"},{"path":"/reference/get_target_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get target time from sim_history — get_target_time","title":"Get target time from sim_history — get_target_time","text":"Get target time sim_history","code":""},{"path":"/reference/get_target_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get target time from sim_history — get_target_time","text":"","code":"get_target_time(sim_history)"},{"path":"/reference/get_true_size_mod2.html","id":null,"dir":"Reference","previous_headings":"","what":"this function returns the incoming size as well as the outgoing sizes — get_true_size_mod2","title":"this function returns the incoming size as well as the outgoing sizes — get_true_size_mod2","text":"function returns incoming size well outgoing sizes","code":""},{"path":"/reference/get_true_size_mod2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"this function returns the incoming size as well as the outgoing sizes — get_true_size_mod2","text":"","code":"get_true_size_mod2(type_graph, delay = F)"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/ice_fase.html","id":null,"dir":"Reference","previous_headings":"","what":"reconstructs phylogeny with phylotime, and infers quantitative fate map with ice_fase — ice_fase","title":"reconstructs phylogeny with phylotime, and infers quantitative fate map with ice_fase — ice_fase","text":"reconstructs phylogeny phylotime, infers quantitative fate map ice_fase","code":""},{"path":"/reference/ice_fase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reconstructs phylogeny with phylotime, and infers quantitative fate map with ice_fase — ice_fase","text":"","code":"ice_fase(tr, sc_celltypes, total_time, root_time = 0, theta = 0)"},{"path":"/reference/ice_fase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reconstructs phylogeny with phylotime, and infers quantitative fate map with ice_fase — ice_fase","text":"tr phylogenetic tree \"phylo\" type sc_celltypes either named character vector specifying types row cell_mat function applied rownames character matrix total_time time sample collection since barcode activation theta depracated parameters always set zero","code":""},{"path":"/reference/ice_fase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reconstructs phylogeny with phylotime, and infers quantitative fate map with ice_fase — ice_fase","text":"Fitted ICE_FASE results","code":""},{"path":"/reference/impute_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing characters from cell allele matrix — impute_characters","title":"Impute missing characters from cell allele matrix — impute_characters","text":"Impute missing characters cell allele matrix","code":""},{"path":"/reference/impute_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing characters from cell allele matrix — impute_characters","text":"","code":"impute_characters(mat, nrounds = 100, max_depth = 4)"},{"path":"/reference/impute_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing characters from cell allele matrix — impute_characters","text":"mat character matrix rows corresponding cells columns corresponding barcoding sites","code":""},{"path":"/reference/init_mut_counts_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize mutant allele count list for bulk counting — init_mut_counts_list","title":"Initialize mutant allele count list for bulk counting — init_mut_counts_list","text":"Initialize mutant allele count list bulk counting","code":""},{"path":"/reference/init_mut_counts_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize mutant allele count list for bulk counting — init_mut_counts_list","text":"","code":"init_mut_counts_list(mut_param, num_cells)"},{"path":"/reference/initial_states_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make initial states list — initial_states_list","title":"Make initial states list — initial_states_list","text":"Make initial states list","code":""},{"path":"/reference/initial_states_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make initial states list — initial_states_list","text":"","code":"initial_states_list(type_graph, count = 1)"},{"path":"/reference/initialize_mut_element_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the global mut_element counter for non-recurring alleles — initialize_mut_element_counter","title":"Initialize the global mut_element counter for non-recurring alleles — initialize_mut_element_counter","text":"Initialize global mut_element counter non-recurring alleles","code":""},{"path":"/reference/initialize_mut_element_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the global mut_element counter for non-recurring alleles — initialize_mut_element_counter","text":"","code":"initialize_mut_element_counter(mut_element, element_dim = 1)"},{"path":"/reference/initialize_mut_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize unmutated matrix for single cell model — initialize_mut_state","title":"Initialize unmutated matrix for single cell model — initialize_mut_state","text":"Initialize unmutated matrix single cell model","code":""},{"path":"/reference/initialize_mut_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize unmutated matrix for single cell model — initialize_mut_state","text":"","code":"initialize_mut_state(mut_param, num_cells)"},{"path":"/reference/is_non_decs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector is non-decreasing — is_non_decs","title":"Check if a vector is non-decreasing — is_non_decs","text":"Check vector non-decreasing","code":""},{"path":"/reference/is_non_decs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector is non-decreasing — is_non_decs","text":"","code":"is_non_decs(vec)"},{"path":"/reference/is_non_decs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector is non-decreasing — is_non_decs","text":"vec input vector.","code":""},{"path":"/reference/is_zero_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector is all the same value — is_zero_range","title":"Check if a vector is all the same value — is_zero_range","text":"Check vector value","code":""},{"path":"/reference/is_zero_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector is all the same value — is_zero_range","text":"","code":"is_zero_range(x, tol = .Machine$double.eps^0.5)"},{"path":"/reference/is_zero_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector is all the same value — is_zero_range","text":"x input vector. tol tolerance comparing elements vector","code":""},{"path":"/reference/make_gr_tr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"mostly deprecated functions of ICE_FASE, replaced by 'ice_fase_mod1.R'\r\nsome functions are still used for processing downstream results — make_gr_tr_data","title":"mostly deprecated functions of ICE_FASE, replaced by 'ice_fase_mod1.R'\r\nsome functions are still used for processing downstream results — make_gr_tr_data","text":"mostly deprecated functions ICE_FASE, replaced 'ice_fase_mod1.R' functions still used processing downstream results","code":""},{"path":"/reference/make_gr_tr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mostly deprecated functions of ICE_FASE, replaced by 'ice_fase_mod1.R'\r\nsome functions are still used for processing downstream results — make_gr_tr_data","text":"","code":"make_gr_tr_data(gr, tr, sc_celltypes)"},{"path":"/reference/make_heatmap_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a color palette for Heatmap visualization — make_heatmap_col","title":"Make a color palette for Heatmap visualization — make_heatmap_col","text":"Make color palette Heatmap visualization","code":""},{"path":"/reference/make_heatmap_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a color palette for Heatmap visualization — make_heatmap_col","text":"","code":"make_heatmap_col(   max_val,   mid_val = max_val/2,   min_val = 0,   col = c(\"blue\", \"white\", \"red\") )"},{"path":"/reference/make_mut_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for mutation parameter for a single element\r\nOnly supports max_depth of 1 — make_mut_element","title":"Constructor for mutation parameter for a single element\r\nOnly supports max_depth of 1 — make_mut_element","text":"Constructor mutation parameter single element supports max_depth 1","code":""},{"path":"/reference/make_mut_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for mutation parameter for a single element\r\nOnly supports max_depth of 1 — make_mut_element","text":"","code":"make_mut_element(   element_id,   mut_rate,   active_time,   recur_prob = 0,   recur_vec = NULL,   max_depth = 1 )"},{"path":"/reference/make_mut_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for mutation parameter for a single element\r\nOnly supports max_depth of 1 — make_mut_element","text":"recur chance recurring","code":""},{"path":"/reference/make_mut_param_by_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a mut_param by a sequence of mutation rates — make_mut_param_by_rate","title":"Make a mut_param by a sequence of mutation rates — make_mut_param_by_rate","text":"Make mut_param sequence mutation rates","code":""},{"path":"/reference/make_mut_param_by_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a mut_param by a sequence of mutation rates — make_mut_param_by_rate","text":"","code":"make_mut_param_by_rate(mut_rate, active_time, recur_prob = 0, recur_vec = NULL)"},{"path":"/reference/make_mut_param_by_rate_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a mut_param by a sequence of mutation rates and multinomial allele probabilities — make_mut_param_by_rate_rvec","title":"Make a mut_param by a sequence of mutation rates and multinomial allele probabilities — make_mut_param_by_rate_rvec","text":"Make mut_param sequence mutation rates multinomial allele probabilities","code":""},{"path":"/reference/make_mut_param_by_rate_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a mut_param by a sequence of mutation rates and multinomial allele probabilities — make_mut_param_by_rate_rvec","text":"","code":"make_mut_param_by_rate_rvec(   mut_rate,   active_time,   recur_prob_vec,   recur_vec_list )"},{"path":"/reference/make_type_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for type graph — make_type_graph","title":"Constructor for type graph — make_type_graph","text":"Constructor type graph","code":""},{"path":"/reference/make_type_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for type graph — make_type_graph","text":"","code":"make_type_graph(   root_id,   node_id,   tip_id,   merge_matrix,   differntiation_time,   differntiation_mode_probs,   double_time,   founder_size,   target_time,   transition_selection = NULL )"},{"path":"/reference/make_type_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for type graph — make_type_graph","text":"root_id name root, integer num_tip - 1 node_id vector names graph nodes, .e. progenitor states tip_id vector names graph tip, .e. terminal states merge_matrix character matrix specifying sequence merges differntiation_mode_probs commitment bias, need vector length 5, first values two non-zero double_time list doubling times state founder_size founder size target_time time sample collection differentiation_time commitment time states","code":""},{"path":"/reference/mut_counts_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives the counts for mut_counts_list — mut_counts_total","title":"Gives the counts for mut_counts_list — mut_counts_total","text":"Gives counts mut_counts_list","code":""},{"path":"/reference/mut_counts_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives the counts for mut_counts_list — mut_counts_total","text":"","code":"mut_counts_total(mut_counts_list)"},{"path":"/reference/mutate_barcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate mutant allele for single cell mutation states — mutate_barcodes","title":"Generate mutant allele for single cell mutation states — mutate_barcodes","text":"Generate mutant allele single cell mutation states","code":""},{"path":"/reference/mutate_barcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate mutant allele for single cell mutation states — mutate_barcodes","text":"","code":"mutate_barcodes(mut_state, life_duration, mut_param)"},{"path":"/reference/mutate_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate the barcodes for cells object — mutate_cells","title":"Mutate the barcodes for cells object — mutate_cells","text":"Mutate barcodes cells object","code":""},{"path":"/reference/mutate_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate the barcodes for cells object — mutate_cells","text":"","code":"mutate_cells(cells, mut_param)"},{"path":"/reference/normalize_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize rows of a matrix to be the same sum `m` — normalize_row","title":"Normalize rows of a matrix to be the same sum `m` — normalize_row","text":"Normalize rows matrix sum `m`","code":""},{"path":"/reference/normalize_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize rows of a matrix to be the same sum `m` — normalize_row","text":"","code":"normalize_row(x, m = 1000)"},{"path":"/reference/normalize_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct lineage tree from sim_history — normalize_tree","title":"Construct lineage tree from sim_history — normalize_tree","text":"Construct lineage tree sim_history","code":""},{"path":"/reference/normalize_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct lineage tree from sim_history — normalize_tree","text":"","code":"normalize_tree(tree, check.ultrametric = TRUE)"},{"path":"/reference/num_gen_single_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a single cell type, generate the number of generations it will divide until it reaches target time or differentiate — num_gen_single_type","title":"Given a single cell type, generate the number of generations it will divide until it reaches target time or differentiate — num_gen_single_type","text":"Given single cell type, generate number generations divide reaches target time differentiate","code":""},{"path":"/reference/num_gen_single_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a single cell type, generate the number of generations it will divide until it reaches target time or differentiate — num_gen_single_type","text":"","code":"num_gen_single_type(cell_type, rtime, type_graph)"},{"path":"/reference/phylotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylotime for reconstructing time-scaled phylogeny based on lineage barcodes — phylotime","title":"Phylotime for reconstructing time-scaled phylogeny based on lineage barcodes — phylotime","text":"Phylotime reconstructing time-scaled phylogeny based lineage barcodes","code":""},{"path":"/reference/phylotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylotime for reconstructing time-scaled phylogeny based on lineage barcodes — phylotime","text":"","code":"phylotime(sc_mat, t_total, mut_p = NULL, return_dist = F, parallel = T)"},{"path":"/reference/phylotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phylotime for reconstructing time-scaled phylogeny based on lineage barcodes — phylotime","text":"sc_mat character matrix cell x barcoding sites t_total total amount time since barcode activation return_dist whetehr return pairwise distance cells, default, ape tree returned","code":""},{"path":"/reference/plot_col_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a color vector for visualization — plot_col_vec","title":"Plot a color vector for visualization — plot_col_vec","text":"Plot color vector visualization","code":""},{"path":"/reference/plot_col_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a color vector for visualization — plot_col_vec","text":"","code":"plot_col_vec(col_vec)"},{"path":"/reference/plot_gr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"plot ice_fase results — plot_gr_data","title":"plot ice_fase results — plot_gr_data","text":"plot ice_fase results","code":""},{"path":"/reference/plot_gr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot ice_fase results — plot_gr_data","text":"","code":"plot_gr_data(out_data, target_time, gr_col = NULL, gr_lab = NULL)"},{"path":"/reference/plot_gr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot ice_fase results — plot_gr_data","text":"out_data \"ice_fase_results\" object","code":""},{"path":"/reference/plot_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot legend on a new canvas given a ggplot object — plot_legend","title":"Plot legend on a new canvas given a ggplot object — plot_legend","text":"Plot legend new canvas given ggplot object","code":""},{"path":"/reference/plot_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot legend on a new canvas given a ggplot object — plot_legend","text":"","code":"plot_legend(g)"},{"path":"/reference/plot_type_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot type graph using ggraph — plot_type_graph","title":"Plot type graph using ggraph — plot_type_graph","text":"Plot type graph using ggraph","code":""},{"path":"/reference/plot_type_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot type graph using ggraph — plot_type_graph","text":"","code":"plot_type_graph(   type_graph,   node_col_mapper = white_col_mapper,   node_label_mapper = NULL,   effective_time = T,   show_node_text = T )"},{"path":"/reference/push_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Push a ggplot object to a PDF file — push_pdf","title":"Push a ggplot object to a PDF file — push_pdf","text":"Push ggplot object PDF file","code":""},{"path":"/reference/push_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push a ggplot object to a PDF file — push_pdf","text":"","code":"push_pdf(   g,   file_name,   width = 4,   height = 4,   ps = 12,   dir = \"./\",   open_file = T )"},{"path":"/reference/push_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Push a ggplot object to a PNG file — push_png","title":"Push a ggplot object to a PNG file — push_png","text":"Push ggplot object PNG file","code":""},{"path":"/reference/push_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push a ggplot object to a PNG file — push_png","text":"","code":"push_png(   g,   file_name,   width = 4,   height = 4,   ps = 12,   res = 300,   dir = \"../LTModelPlots/\",   open_file = T )"},{"path":"/reference/rstoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a number stochasticly, returns integer greater than or equal to one. — rstoc","title":"Round a number stochasticly, returns integer greater than or equal to one. — rstoc","text":"Round number stochasticly, returns integer greater equal one.","code":""},{"path":"/reference/rstoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a number stochasticly, returns integer greater than or equal to one. — rstoc","text":"","code":"rstoc(x)"},{"path":"/reference/rstoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a number stochasticly, returns integer greater than or equal to one. — rstoc","text":"x integer","code":""},{"path":"/reference/sample_all_mut_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw one sample of mutation counts for all elements — sample_all_mut_counts","title":"Draw one sample of mutation counts for all elements — sample_all_mut_counts","text":"Draw one sample mutation counts elements","code":""},{"path":"/reference/sample_all_mut_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw one sample of mutation counts for all elements — sample_all_mut_counts","text":"","code":"sample_all_mut_counts(   mut_counts_list,   mut_param,   start_time,   end_time,   double_counts = F )"},{"path":"/reference/sample_all_mut_counts_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw one sample of the mutation counts after a number of generatioins — sample_all_mut_counts_gen","title":"Draw one sample of the mutation counts after a number of generatioins — sample_all_mut_counts_gen","text":"Draw one sample mutation counts number generatioins","code":""},{"path":"/reference/sample_all_mut_counts_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw one sample of the mutation counts after a number of generatioins — sample_all_mut_counts_gen","text":"","code":"sample_all_mut_counts_gen(   mut_counts_list,   mut_param,   life_duration,   num_gen,   double_counts = T )"},{"path":"/reference/sample_all_mut_counts_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw one sample of the mutation counts after a number of generatioins — sample_all_mut_counts_gen","text":"num_gen number generation","code":""},{"path":"/reference/sample_doublet_branch.html","id":null,"dir":"Reference","previous_headings":"","what":"the stochastic coal function\r\nsample the number of doublet branches when dividing n cells into 2*n cell — sample_doublet_branch","title":"the stochastic coal function\r\nsample the number of doublet branches when dividing n cells into 2*n cell — sample_doublet_branch","text":"stochastic coal function sample number doublet branches dividing n cells 2*n cell","code":""},{"path":"/reference/sample_doublet_branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the stochastic coal function\r\nsample the number of doublet branches when dividing n cells into 2*n cell — sample_doublet_branch","text":"","code":"sample_doublet_branch(n, k)"},{"path":"/reference/sample_doublet_twotype.html","id":null,"dir":"Reference","previous_headings":"","what":"the asymmetric coal function — sample_doublet_twotype","title":"the asymmetric coal function — sample_doublet_twotype","text":"asymmetric coal function","code":""},{"path":"/reference/sample_doublet_twotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the asymmetric coal function — sample_doublet_twotype","text":"","code":"sample_doublet_twotype(n, k1, k2)"},{"path":"/reference/sample_mut_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw one sample of the mutation counts after some time — sample_mut_counts","title":"Draw one sample of the mutation counts after some time — sample_mut_counts","text":"Draw one sample mutation counts time","code":""},{"path":"/reference/sample_mut_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw one sample of the mutation counts after some time — sample_mut_counts","text":"","code":"sample_mut_counts(mut_counts, mut_element, duration)"},{"path":"/reference/sample_mut_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw one sample of the mutation counts after some time — sample_mut_counts","text":"life_duration length generation double_counts whether counts alleles doubled reulst division","code":""},{"path":"/reference/scale_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"deprecated\r\nAssign counts based on total and fraction, rounded to integer\r\nEnsure that each category gets some minimum of counts\r\nScale counts based on a factor, rounded to integer, counts must be at least 1 — scale_counts","title":"deprecated\r\nAssign counts based on total and fraction, rounded to integer\r\nEnsure that each category gets some minimum of counts\r\nScale counts based on a factor, rounded to integer, counts must be at least 1 — scale_counts","text":"deprecated Assign counts based total fraction, rounded integer Ensure category gets minimum counts Scale counts based factor, rounded integer, counts must least 1","code":""},{"path":"/reference/scale_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deprecated\r\nAssign counts based on total and fraction, rounded to integer\r\nEnsure that each category gets some minimum of counts\r\nScale counts based on a factor, rounded to integer, counts must be at least 1 — scale_counts","text":"","code":"scale_counts(counts, z)"},{"path":"/reference/sim_history_to_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sim_history to edges data.frame — sim_history_to_edges","title":"Convert sim_history to edges data.frame — sim_history_to_edges","text":"Convert sim_history edges data.frame","code":""},{"path":"/reference/sim_history_to_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sim_history to edges data.frame — sim_history_to_edges","text":"","code":"sim_history_to_edges(sim_history)"},{"path":"/reference/sim_history_to_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sim_history to nodes data.frame — sim_history_to_nodes","title":"Convert sim_history to nodes data.frame — sim_history_to_nodes","text":"Convert sim_history nodes data.frame","code":""},{"path":"/reference/sim_history_to_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sim_history to nodes data.frame — sim_history_to_nodes","text":"","code":"sim_history_to_nodes(sim_history)"},{"path":"/reference/simplify_edges_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove internal nodes with single daughter — simplify_edges_df","title":"Remove internal nodes with single daughter — simplify_edges_df","text":"Remove internal nodes single daughter","code":""},{"path":"/reference/simplify_edges_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove internal nodes with single daughter — simplify_edges_df","text":"","code":"simplify_edges_df(edges_df, nodes_df)"},{"path":"/reference/subsample_all_mut_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw subsample of allele counts for all elements — subsample_all_mut_counts","title":"Draw subsample of allele counts for all elements — subsample_all_mut_counts","text":"Draw subsample allele counts elements","code":""},{"path":"/reference/subsample_all_mut_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw subsample of allele counts for all elements — subsample_all_mut_counts","text":"","code":"subsample_all_mut_counts(mut_counts_list, sample_size)"},{"path":"/reference/subsample_mut_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a subsample of mutant allele counts — subsample_mut_counts","title":"Draw a subsample of mutant allele counts — subsample_mut_counts","text":"Draw subsample mutant allele counts","code":""},{"path":"/reference/subsample_mut_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a subsample of mutant allele counts — subsample_mut_counts","text":"","code":"subsample_mut_counts(mut_counts, sample_size)"},{"path":"/reference/subset_mut_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a `mut_p` object to a number of its elements — subset_mut_p","title":"Subset a `mut_p` object to a number of its elements — subset_mut_p","text":"Subset `mut_p` object number elements","code":""},{"path":"/reference/subset_mut_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a `mut_p` object to a number of its elements — subset_mut_p","text":"","code":"subset_mut_p(mut_p, indices)"},{"path":"/reference/white_col_mapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a 'white' color vector for plotting — white_col_mapper","title":"Generate a 'white' color vector for plotting — white_col_mapper","text":"Generate 'white' color vector plotting","code":""},{"path":"/reference/white_col_mapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a 'white' color vector for plotting — white_col_mapper","text":"","code":"white_col_mapper(types)"},{"path":"/articles/basic_tutorial.html","id":"read-example-data","dir":"Articles","previous_headings":"","what":"Read example data","title":"Basic tutorial on Quantitative Fate Mapping (QFM)","text":"example, demonstrate quantitative fate mapping lineage barcode data measured cell types. First, apply Phylotime reconstruct time-scaled phylogeny lineage barcodes. Second, ICE-FASE applied extract parameters progenitor population dynamics, including commitment times, progenitor population sizes commitment biases.","code":"# read mutant allele matrix cell_allele_table = readr::read_csv(\"../data/example/mutant_allele_matrix.csv\") cell_allele_table[1:5] ## # A tibble: 1,600 x 5 ##    cell         type  Site_1       Site_2 Site_3      ##    <chr>        <chr> <chr>        <chr>  <chr>       ##  1 Type1_Cell1  Type1 Site1_Mut22  0      Site3_Mut28 ##  2 Type1_Cell2  Type1 Site1_Mut102 0      Site3_Mut1  ##  3 Type1_Cell3  Type1 Site1_Mut2   0      Site3_Mut1  ##  4 Type1_Cell4  Type1 0            0      Site3_Mut1  ##  5 Type1_Cell5  Type1 0            0      Site3_Mut84 ##  6 Type1_Cell6  Type1 0            0      Site3_Mut1  ##  7 Type1_Cell7  Type1 0            0      Site3_Mut8  ##  8 Type1_Cell8  Type1 Site1_Mut4   0      Site3_Mut13 ##  9 Type1_Cell9  Type1 Site1_Mut22  0      Site3_Mut28 ## 10 Type1_Cell10 Type1 Site1_Mut22  0      Site3_Mut28 ## # ... with 1,590 more rows"},{"path":"/articles/basic_tutorial.html","id":"running-phylotime","dir":"Articles","previous_headings":"","what":"Running Phylotime","title":"Basic tutorial on Quantitative Fate Mapping (QFM)","text":"input Phylotime character matrix, rows corresponding cells columns corresponding barcoding sites, tibble / data.frame convert character matrix. matrix needs rownames, used names cells. Within barcoding site (column), character denotes unique mutant allele. unmutated allele needs coded character “0”. (zero) user also needs input total amount active barcoding time, duration mutations actively generated. Phylotime estimates mutation rate data provided assumes uniform allele emergence probability default. set user-defined mutation parameters prior information available. default, Phylotime uses future parallel pairwise distance estimations, use plan set parallel method number workers. Alternatively, set ‘parallel=F’. example, barcoding activates 0.6 days, samples collected 15 days. Now visualize reconstructed tree lineage barcodes:  plot reconstrcuted tree :","code":"chr_mat = as.matrix(cell_allele_table[-c(1:2)]) rownames(chr_mat) = cell_allele_table$cell  library(furrr) plan(multisession, workers = 8) tr = phylotime(chr_mat[, 1:50], t_total = 15. - 0.6) plot_barcodes(chr_mat[, 1:50], tr, show_column_names = F) plot_tr(tr,         end_alpha_terminal = 0.05,         edge_width_terminal = 0.02)"},{"path":"/articles/basic_tutorial.html","id":"running-ice-fase","dir":"Articles","previous_headings":"","what":"Running ICE-FASE","title":"Basic tutorial on Quantitative Fate Mapping (QFM)","text":"Next, apply ICE-FASE, need, additional, terminal cell state classifications. provided named vector, name correspond cell names. can visualzie tree terminal cell states:  run ICE-FASE: (‘root_time’ time barcode activation.)","code":"sc_celltypes = cell_allele_table$type names(sc_celltypes) = cell_allele_table$cell print(sc_celltypes[1:10]) ##  Type1_Cell1  Type1_Cell2  Type1_Cell3  Type1_Cell4  Type1_Cell5  Type1_Cell6  ##      \"Type1\"      \"Type1\"      \"Type1\"      \"Type1\"      \"Type1\"      \"Type1\"  ##  Type1_Cell7  Type1_Cell8  Type1_Cell9 Type1_Cell10  ##      \"Type1\"      \"Type1\"      \"Type1\"      \"Type1\" plot_barcodes(chr_mat[, 1:50], tr, tip_celltype = sc_celltypes, show_column_names = F) res = ice_fase_mod(tr, sc_celltypes, total_time = 15 - 0.6, root_time = 0.6)"},{"path":"/articles/basic_tutorial.html","id":"ice-fase-results","dir":"Articles","previous_headings":"","what":"ICE-FASE results","title":"Basic tutorial on Quantitative Fate Mapping (QFM)","text":"ICE-FASE fitted, number progenitor states identified nodes fate map topology. can plot reconstructed fate map topology commitment times now. Note inferred progenitor states (iP) denoted “Node-x” .  visualize internal node state assignment reconstructed phylogeny: visualize distribution Inferred Commitment Event (ICE) times:  visualize progenitor population sizes:  Finally, can get summary table progenitor state estimates:","code":"plot_gr_clean(gr = res$gr,               total_time = 15,               gr_node_time = res$gr_trans_time,               type_col = res$col_pal,               show_node_label = T) plot_tr(res$tr,         node_types = res$tr_node_assign,         type_col = res$col_pal,         end_alpha_terminal = 0.05,         edge_width_terminal = 0.02) plot_ice_times(res) plot_node_sizes(res) output_estimates(res) ## # A tibble: 15 x 9 ##    progenitor_state commitment_time population_size downstream_state1 ##    <chr>                      <dbl>           <dbl> <chr>             ##  1 Node-1                      2.37              13 Node-2            ##  2 Node-2                      5.03             149 Node-9            ##  3 Node-3                      2.92              23 Node-4            ##  4 Node-4                      5.08              95 Type6             ##  5 Node-5                      3.85              73 Node-6            ##  6 Node-6                      5.50             101 Type7             ##  7 Node-7                      4.92             159 Type16            ##  8 Node-8                      5.74             239 Type15            ##  9 Node-9                      6.38             124 Type3             ## 10 Node-10                     5.92             133 Type1             ## 11 Node-11                     6.34             280 Type14            ## 12 Node-12                     6.66             267 Type12            ## 13 Node-13                     6.66             214 Type13            ## 14 Node-14                     6.97             182 Type9             ## 15 Node-15                     6.98             117 Type11            ## # ... with 5 more variables: downstream_size1 <dbl>, downstream_state2 <chr>, ## #   downstream_size2 <dbl>, commitment_bias1 <dbl>, commitment_bias2 <dbl>"},{"path":"/articles/operations.html","id":"operations-implemented-for-count-graphs","dir":"Articles","previous_headings":"","what":"Operations implemented for count graphs","title":"Operations for count graphs","text":"","code":"# Split N = 100 p_vec = c(0.5, 0.2, 0.15, 0.1, 0.04, 0.01) m_vec = c(2, 2, 2, 2, 2, 2) round_frac(N, p_vec, m_vec) ## [1] 49 20 15 10  4  2 # Stochastic split S = 100 N_vec = c(100, 200, 300) extraDistr::rmvhyper(nn = 1,                      n = N_vec,                      k = S)[1, ] ## [1] 22 33 45 # Stochastic coalescence S = 15 N = 10 C = sample_doublet_branch(N, S) S_ = S - C S_ ## [1] 10 # Stochastic asymm coal S1 = 5 S2 = 8 N = 10 C = sample_doublet_twotype(N, S1, S2) S_ = S1 + S2 - C S_ ## [1] 8"},{"path":"/articles/simulate_phylogeny_and_barcodes.html","id":"quantitative-fate-maps-specifications","dir":"Articles","previous_headings":"","what":"Quantitative fate maps specifications","title":"Simulating cell phylogeny and lineage barcodes from QFM","text":"Quantitative fate maps implemented ‘type_graph’ S3 objects, following attributes. ‘node_id’: progenitor states. Progenitor states represented positive integers. ‘root-id’: root state. Root state one progenitor states represented largest positive integer. ‘tip_id’: terminal types. Terminal types represented negative integers. ‘merge’: list daughter state(s)/type(s) progenitor state. ‘diff_time’: time progenitor state commitments. Terminal types infinite time commitment. ‘diff_mode_probs’: commitment bias progenitor states. Values corresponds three modes commitments: symmetric downstream state X (first element ‘merge’), symmetric downstream states Y (second element ‘merge’) assymetric commitment. ‘lifetime’: doubling time cells state/type. ‘founder_size’: number cell(s) root state time zero. ‘target_time’: time sample collection. ‘prob_loss’: cell death probabilities state/type. ‘prob_pm’: non-doubling proabilities state/type. ‘edges’: edge list. can derived information . ‘root_time’: time first commitment event root state.","code":""},{"path":"/articles/simulate_phylogeny_and_barcodes.html","id":"mutagenesis-parameters-specifications","dir":"Articles","previous_headings":"","what":"Mutagenesis parameters specifications","title":"Simulating cell phylogeny and lineage barcodes from QFM","text":"mutatgenesis parameters implemented ‘mut_params’ S3 objects, following attributes. Suppose array barcoding sites \\(J\\) total elements. ‘mut_rate’: vector length \\(J\\), mutation rate sites. ‘recur_prob’’: vector length \\(J\\), deprecatad parameter, always set vector ones. ‘active time’’: list range intervals barcoding active. ‘recur_vec_list’: list allele emergence probabilities length \\(J\\), item list named vector probabilities sum \\(1\\). names mutant allele names.","code":""},{"path":"/index.html","id":"quantitative-fate-mapping-qfm-via-retrospective-lineage-barcodes","dir":"","previous_headings":"","what":"Quantitative Fate Mapping with ICE-FASE and Phylotime","title":"Quantitative Fate Mapping with ICE-FASE and Phylotime","text":"install: basic tutorial, check vignette: https://kalhor-lab.github.io/QFM/articles/basic_tutorial.html reproduce results manuscript: Check ‘analysis/’ folder. Data manuscript can found : https://github.com/Kalhor-Lab/QFM-Data Report bugs provide suggestions sending email : Author maintainer: Weixiang Fang (wfang9@jh.edu) open new issue Github page Corresponding authors: Reza Kalhor, Hongkai Ji Preprint: https://biorxiv.org/cgi/content/short/2022.02.13.480215v1","code":"if (!require(\"devtools\"))   install.packages(\"devtools\")  if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(version = \"3.14\")  # install dependencies from Bioconductor BiocManager::install(\"ComplexHeatmap\")  devtools::install_github(\"Kalhor-Lab/QFM\")"}]
